// prevents links from apps from oppening in mobile safari:
(function(document,navigator,standalone) {
    // this javascript must be the first script in your <head>
    if ((standalone in navigator) && navigator[standalone]) {
        var curnode, location=document.location, stop=/^(a|html)$/i;
        document.addEventListener('click', function(e) {
            curnode=e.target;
            while (!(stop).test(curnode.nodeName)) {
                curnode=curnode.parentNode;
            }
            // Condidions to do this only on links to your own app
            // if you want all links, use if('href' in curnode) instead.
            if('href' in curnode && ( curnode.href.indexOf('http') || ~curnode.href.indexOf(location.host) ) ) {
                e.preventDefault();
                location.href = curnode.href;
            }
        },false);
    }
})(document,window.navigator,'standalone');

// Hides safari menu bar after load:
// When ready...
window.addEventListener("load",function() {
    // Set a timeout...
    setTimeout(function(){
        // Hide the address bar!
        window.scrollTo(0, 1);
    }, 0);
});

                    
function backbutton(){
    //conditional app code (back button)
    if (
        ("standalone" in window.navigator) &&
        window.navigator.standalone
        ){
        console.log("running as a app") // test code
        // back button for app mode
        var backbutton = document.getElementById("back_button");
        backbutton.style.display="inline";
    }
    else {
        console.log("not running as an app") // test code
        // display none for .class .backbutton
        var backbutton = document.getElementById("back_button");
        backbutton.style.display="none";
    }
}

function webapp_footer_msg() {
    if (
        ("standalone" in window.navigator) &&
        window.navigator.standalone
        )
        {
            console.log("running as a web app for footer replacement")
            var ios_foot = document.getElementsByClassName("for-ios");
            ios_foot.style.display="none";
            
            var app_foot = document.getElementsByClassName("webapp-footer");
            app_foot.style.display="inline";
        }
        
    else {
            console.log ("just being regular for footer")
    }
}

// todo: make koamoji text selection easy for iphone.. if possible.


var action_name = "Action";
var action_text = "So many punches <br>to give and <br>tables to <br>flip";
var action = [ "(╯°□°）╯︵ ┻━┻", "┬──┬◡ﾉ(° -°ﾉ)", "〆(・∀・＠)", "((((*｡_｡)_", "(*・_・)ノ⌒*", "八(＾□＾*)", "(?・・)σ", "(ι´Д｀)ﾉ", "d(-_^)", "( ﾟ∀(・－・)", "p(*＾-＾*)q", "(*・)σσσ(*゜Д゜*)", "ヽ｀、ヽ｀ヽ(*￣o￣*)>ヽ｀、ヽ", "￢o(￣-￣ﾒ)", "（　＾）／占~~~~~", "（*＾＾）/~~~~~~~~~~◎", "（。_°☆＼(- – )", "( `_)乂(_’ )", "Ｏ( ｀_´)乂(｀_´ )Ｏ", "(`･ω･´)ゞ", "(●ゝω)ノヽ(∀＜●)", "凸(⊙▂⊙✖ )", "(づ￣ ³￣)づ", "๏[-ิ_•ิ]๏", "( ^o)ρ┳┻┳°σ(o^ )", "ヽ(^o^)ρ┳┻┳°σ(^o^)/", "(／_^)／ 　　　●　＼(^_＼)", "＝( ^o^)ノ ．．．…___ｏ", "(-^-^)p_____|_o____q(^-^ )", "(／o^)/ °⊥ ＼(^o＼)", "(ｏ・_・)ノ”(ノ_＜。)", "―(T_T)→", "ლ(´ڡ`ლ)", "(☞ﾟ∀ﾟ)☞"
];   //      (╯°Д°）╯︵/(.□ . \)

var angry_name = "Angry";
var angry_text = "Angerrrrr!";
var angry = ["(ง •̀_•́)ง", "(*≧m≦*)", "(>_<)", "(,,#ﾟДﾟ)", "ヽ(ｏ`皿′ｏ)ﾉ", "o(>< )o", "ｏ( ><)o", "ヽ(≧Д≦)ノ", "（＞д＜）", "（;≧皿≦）", "[○･｀Д´･○]", "ヽ(#`Д´)ﾉ", "Σ(-`Д´-ﾉ；)ﾉ", "(((p(>o<)q)))", "(/ﾟДﾟ)/", "(¬д¬。)", "ヽ(#`Д´)ﾉ", "(¬､¬)", "（；¬＿¬)", "(;¬_¬)", "(；¬д¬)", "(≧σ≦)", "o(-`д´- ｡)", "ヽ(●-`Д´-)ノ", "(*￣m￣)", "(´Д｀)", "(；￣Д￣）", " (¬_¬)ﾉ", "(＃｀д´)ﾉ", "(」゜ロ゜)」", "Σ(▼□▼メ)", "(━┳━ _ ━┳━)", "(┳◇┳)", "{{|└(>o< )┘|}}", "＼(＠O＠)／", "（≧▼≦；)", "＼(〇O〇)／", "s(・｀ヘ´・;)ゞ", "（▼へ▼メ）", "＼(`O´θ／", "θ＼(；￢_￢)", "ヽ(｀⌒´メ)ノ", "凸(-0-メ)", "凸(｀△´＋）", "凸(｀0´)凸", "凸(｀⌒´メ)凸", "＼(｀0´)／", "-`д´-", "(>人<)", "щ(ಠ益ಠщ)", "(ノಠ益ಠ)ノ", "щ(ಥДಥщ)", "o(≧o≦)o", "(⋋▂⋌)", "(◣_◢)", "ᕙ(⇀‸↼‶)ᕗ", "ᕦ(ò_óˇ)ᕤ", "( ಠ ಠ )", "(¬▂¬)", "(¬_¬)", "ಥ⌣ಥ", "ಠ_ಠ"
];

var apology_name = "Apologizing";
var apology_text = "Please and <br>Sorry.";
var apology = [ "m(_ _)m", "m(._.)m", "ｍ（．＿．）ｍ", "（ﾉ´д｀）", "(シ_ _)シ", "<(_ _)>", "＜(。_。)＞", "ｍ（＿　＿；；ｍ", "m(￢0￢)m"
];

var bear_name = "Bears";
var bear_text = "Bears, oh my";
var bear = ["(￣(エ)￣)", "(｡･ω･｡)", "(●｀･(ｴ)･´●)", "(*ノ・ω・）", "川´･ω･`川", "( (ﾐ´ω`ﾐ))", "ヾ(T(エ)Tヽ)", "＼(・｀(ｪ)・)/", "⊂(ο･㉨･ο）⊃", "(^(エ)^)", "(^(I)^)", "(￣(ｴ)￣)ﾉ", "⊂(￣(工)￣)⊃", "⊂(^(工)^)⊃", "⊂(・(ェ)・)⊃", "(*￣(ｴ)￣*)", "ヾ(´(ｴ)｀ﾉﾞ", "(／(ｴ)＼)", "⊂(￣(ｴ)￣)⊃", "“(`(エ)´)ノ", "(｀(エ)´)ﾉ", "(ó㉨ò)", "(♥ó㉨ò)ﾉ♡", "(/-(ｴ)-＼)", "(´(エ)｀)", "ヽ(￣(ｴ)￣)ﾉ", "(／￣(ｴ)￣)／", "⊂(◎(工)◎)⊃", "(●￣(ｴ)￣●)", "《/(￣(ｴ)￣)ゞ》", "⁝⁞⁝⁞ʕु•̫͡•ʔु☂⁝⁞⁝⁝", "(✪㉨✪)", "Ψ(￣(ｴ)￣)Ψ", "┏((＝￣(ｴ)￣=))┛", "・㉨・"
];

var cat_name = "Cats";
var cat_text = "Meow! <br>Feels so right.";
var cat = ["(=^･ｪ･^=)", "(=^‥^=)", "(=^･^=)", "V(=^･ω･^=)v", "(=｀ω´=)", "o(^・x・^)o", "＼(=^‥^)/’`", "( =①ω①=)", "d(=^･ω･^=)b", "(=ＴェＴ=)", "(=;ェ;=)", "ヽ(=^･ω･^=)丿", "(=^･ω･^)y＝", "(^-人-^)", "ヽ(^‥^=ゞ)", "(^・ω・^ )", "(=^-ω-^=)", "b(=^‥^=)o", "(.=^・ェ・^=)", "（=´∇｀=）", "ヾ(=ﾟ･ﾟ=)ﾉ", "~(=^‥^)ノ", "~(=^‥^)/", "(=ｘェｘ=)", "(=；ェ；=)", "(=｀ェ´=)", "(^･o･^)ﾉ”", "(^._.^)ﾉ", "└(=^‥^=)┐", "=’①。①’=", "<(*ΦωΦ*)>"
];

var confused_name = "Confused";
var confused_text = "Bark! <br>I'm so confused";
var confused = ["(´･_･`)", "(◎_◎;)", "(｀_´)ゞ", "(◎-◎；)", "(・_・ヾ", "(￣(エ)￣)ゞ", "(-_-)ゞ゛", "(‘◇’)?", "ヽ(゜Q。)ノ？", "(´｀;) ？", "【・ヘ・?】", "【・_・?】", "( ・◇・)？", "(゜-゜)", "ヾ(´･ ･｀｡)ノ”", "｢(ﾟﾍﾟ)", "( ?´_ゝ｀)", "o(´^｀)o", "(´−｀) ﾝｰ", "(」ﾟヘﾟ)」", "(•ิ_•ิ)?", "「(°ヘ°)", "(。ヘ°)", "ヽ(゜Q。)ノ？", "(´｀;) ？", "〈(゜。゜)", "(゜。゜)", "く（＾_・）ゝ", "(^～^;)ゞ", "٩(͡๏̯͡๏)۶", "٩(̾●̮̮̃̾•̃̾)۶", "(⊙_◎)"
];

var dancing_name = "Dancing";
var dancing_text = "Let's Dance";
var dancing = ["ヘ(^_^ヘ)", "(ノ^_^)ノ", "o(^^o)", "(o^^)o", "(ノ´＿ゝ｀）ノ", "ヾ(^ ^ゞ", "(ノ‥)ノ", "( ﾉ^ω^)ﾉﾟ", "ヾ(*´∇`)ﾉ", "ヾ(･ω･*)ﾉ", "(*ﾉ´□`)ﾉ", "。(⌒∇⌒。)", "(。⌒∇⌒)。", "〜(￣▽￣〜)", "(〜￣▽￣)〜", "〜(^∇^〜）", "（〜^∇^)〜", "〜(￣△￣〜)", "(〜￣△￣)〜", "┗(｀ー´)┓", "┏(｀ー´)┛", "┗(＾0＾)┓", "┏(＾0＾)┛", "(ノ￣ー￣)ノ", "ヘ(￣ー￣ヘ)", "ヘ(￣ω￣ヘ)", "(ノ￣ω￣)ノ", "ヘ(^o^ヘ)", "(ノ^o^)ノ", "ヾ(-_- )ゞ", "ヾ(＠^∇^＠)ノ", "(ﾉ≧∀≦)ﾉ", "＼(^ω^＼)", "(ﾉﾟ▽ﾟ)ﾉ", "ヽ(ﾟｰﾟ*ヽ)", "ヽ(*ﾟｰﾟ*)ﾉ", "(ﾉ*ﾟｰﾟ)ﾉ", "ヽ(*´Д｀*)ﾉ", "(o´･_･)っ", "ヾ(*д*)ﾉ゛", "ヽ(°◇° )ノ", "ヽ( °◇°)ノ", "(ノ°ο°)ノ", "(ﾉ･o･)ﾉ", "ヾ(^^ゞ)", "ヾ(ﾟ∀ﾟゞ)", "ヽ(´ー`)ﾉ", "ヾ（*⌒ヮ⌒*）ゞ", "〈( ^.^)ノ", "┌（★ｏ☆）┘", "└（★ｏ★）┐", "♪(┌・。・)┌"
];

var dead_name = "Dead";
var dead_text = "Oww, <br>I'm deadened";
var dead = ["（x_x；）", "(*_*)", "(×_×;）", "(×_×#", "(#+_+)", "(+_+)", "ヾ(×× ) ﾂ", "（Ω_Ω）", "へ（>_<へ)", "(＊0＊;)", "(u_u)", " (✖╭╮✖)", "(º_º)", "٩(×̯×)۶", "(ñ_ñ)", "(o_-)"
];

var defeat_name = "Defeat or Surrender";
var defeat_text = "Let's be friends <br>again!";
var defeat = ["＼（－－）／", "＼(-___________-;)／", "/(;-_-)", "~(>_<。)＼", "((-_-))", "（ー△ー；）", "（◎ー◎；）", "(/ _ ; )", "(o_ _)o", "ﾍ(￣ ￣;ﾍ)", "(;*´Д`)ﾉ", "(ﾉ_ _)ﾉ", "ヘ(_ _ヘ)", "(ﾉ￣д￣)ﾉ", "(;-_-)ノ", "o(-_-;*)", "ﾍ(;´Д｀ﾍ)", "(;-_-)/", "(oT-T)尸", "ヘ（´ｏ｀）ヘ", "(一。一;;）", "(ノ#-_-)ノ", "（~～~）", "y-(~。~；)", "(　-。-)"
];

var dog_name = "Dogs";
var dog_text = "Canine adventure <br>time";
var dog = ["Uo･ｪ･oU", "∪･ω･∪", "U｡･ｪ･｡U", "▽・ω・▽", "Ｕ^皿^Ｕ", "ｖ・。・Ｖ", "ＵＴｪＴＵ", "(^・(I)・^)", "U・♀・U", "ｏ（Ｕ・ω・）⊃", "(^・x・^)", "(U・x・U)", "▼o・ェ・o▼", "U＾ェ＾U", "U￣ｰ￣U", "┌U･ｪ･U┘", "└@(･ｪ･)@┐", "ヾ(●ω●)ノ", "(〓￣(∵エ∵)￣〓)"
];

var drinking_name = "Drinking";
var drinking_text = "It's gonna be a long, possibly <br>romantic, <br>night";
var drinking = ["ｏ口(・∀・ )", "(。・・)_且", "且_(ﾟ◇ﾟ；)ノﾞ", "~旦_(^O^ )", "(　 ゜Д゜)⊃旦", "( ´･ω･`)_且~", "( ^-^)_旦”", "(*^◇^)_旦", "(*｀▽´)_旦~~", "~(=^‥^)_旦~", "(＾-＾)＿日", "~~旦_(･o･;)", "( -_-)旦~", "(＃´ー´)旦", "且_(・_・ )"
];

var evil_name = "Evil, Plotting or Sneaky";
var evil_text = "Psst.. watch out?";
var evil = ["(・｀ω´・)", "ψ(｀∇´)ψ", "（｀ー´）", "(｡･｀ω´･｡)", "o(｀ω´*)o", "| ｀Д´|", "(｀ε´)", "(σ-`д･´)", "(｀Д´*)", "（=｀〜´=）", "(ﾒ｀ﾛ´)/", "Ψ(｀▽´)Ψ", "^(#｀∀´)_Ψ", "(*-`ω´- )人", "(ц｀ω´ц*)", "(｀∀´)Ψ", "ψ(*｀ー´)ψ", "Ψ(｀◇´)Ψ", "“ψ(｀∇´)ψ"
];

var fish_name = "Fishes";
var fish_text = "Swimming so free, looking like <br>sushi";
var fish = [">=<", ">゜))))彡", "ζ°)))彡", ">_)))彡", ">^)))< ～～", "(°)#))<<", "（：。）ミ", "Ｃ：。ミ", "(Q )) >", "(°))<<", ">°))))彡", "≧〔゜゜〕≦", "ミ(・・)ミ", "V=(° °)=V", "＜コ：ミ", "(゜))<<", "ミ[°°]ミ", "くコ:彡", "ミ．．ミ"
];

var friends_name = "Friends";
var friends_text = "We can be besties!";
var friends = ["ヽ(∀゜ )人( ゜∀)ノ", "(*･∀･)／＼(･∀･*)", "＼（＾∀＾）メ（＾∀＾）ノ", "＼（★´−｀）人（´▽｀★）／", "（　＾＾）人（＾＾　）", "(〃⌒▽⌒)八(〃⌒▽⌒〃)八(⌒▽⌒〃)", "☆-(ノﾟДﾟ)八(ﾟДﾟ )ノ", "( ｡･_･｡)人(｡･_･｡ )", "ヽ(*^ｰ^)人(^ｰ^*)ノ", "━(○´ｴ｀)(´ｴ｀●)━", "(◎｀・ω・´)人(´・ω・｀*)", "｡*:★(´・ω・人・ω・`)｡:゜★｡", "(*´∀｀*人*´∀｀*)", "（＾▽＾）／＼（＾▽＾）", "（*＾ω＾）人（＾ω＾*）", "ヽ(○´∀)乂(*´∀`*）乂(∀`●)", "＼（＾∀＾）メ（＾∀＾）ノ", "ヽ(´Д｀)人(´Д｀)人(´Д｀)ノ〜♪", "(((*°▽°*)八(*°▽°*)))♪", "♡(*´∀｀*)人(*´∀｀*)♡", "(〃￣д￣)八( ￣д￣ )八(￣д￣〃)", "ヽ(＾▽＾)人(＾▽＾)人(＾▽＾)ﾉ", "(((＠°▽°＠)八(＠°▽°＠)))", "(･_･”)/＼(･_･”)", "(○｀ε´○)／＼(○｀ε´○)", "ヘ( ^o^)ノ＼(^_^ )", "(/^-^(^ ^*)/", "( 。・_・。)人(。・_・。 )", "(・_・)〆＼(Ｔ＿Ｔ）", "(^^)-(^^)-(^^)-(^^)-(^^)", "ヽ(´Д｀)人(´Д｀)人(´Д｀)ノ", "ヾ(￣ー￣)X(^∇^)ゞ", "♪ヽ( ⌒o⌒)人(⌒-⌒ )v ♪", "(*^o^)人(^o^*)", "＼(　^o)( ^ 0 ^ )(o^　)／", "ヽ（　＾＾）人（＾＾　）ノ", "(・_・”)／＼(・_・”)", "└(^o^ )Ｘ( ^o^)┘", "(＾○＾)オ(＾▽＾)ハ(＾０＾)ツ～", "( ⌒o⌒)人(⌒-⌒ )v", "(°◇°人°◇°)"
];

var greetingsGoodbyes_name = "Greetings or Goodbyes";
var greetingsGoodbyes_text = "Aloha"; // or 'oyo dawg'
var greetingsGoodbyes = [ "ヾ(＾∇＾)", "(^-^*)/", "( ﾟ▽ﾟ)/", "( ^_^)／", "(^o^)/", "(^ _ ^)/", "( ´ ▽ ` )ﾉ", "(ﾉ´∀｀*)ﾉ", "ヾ(´･ω･｀)", "☆ﾐ(o*･ω･)ﾉ", "＼(＾▽＾*)", "(*＾▽＾)／", "(￣▽￣)ノ", "ヾ(-_-;)", "ヾ( ‘ – ‘*)", "ヾ(＠⌒ー⌒＠)ノ", "~ヾ ＾∇＾", "~ヾ(＾∇＾)", "＼(￣O￣)", "(｡･ω･)ﾉﾞ", "(*^･ｪ･)ﾉ", "(￣∠ ￣ )ﾉ", "(*￣Ｏ￣)ノ", "ヾ(｡´･_●･`｡)☆", "(/・0・)", "(ノ^∇^)", "(,, ･∀･)ﾉ゛", "(。･д･)ﾉﾞ", "＼(°o°；）", "(｡´∀｀)ﾉ", "(o´ω`o)ﾉ", "( ･ω･)ﾉ", "(。^_・)ノ", "( ・_・)ノ", "＼(-o- )", "(。-ω-)ﾉ", "＼(-_- )", "＼( ･_･)", "ヾ(´￢｀)ﾉ", "ヾ(☆▽☆)", "(^ Q ^)/゛", "~(＾◇^)/", "ヘ(‘◇’、)/", "ヘ(°◇、°)ノ", "ヘ(°￢°)ノ", "ヘ(゜Д、゜)ノ", "（ ゜ρ゜)ノ", "ー( ´ ▽ ` )ﾉ", "ヽ(๏∀๏ )ﾉ"
];

var happy_name = "Happy or Joyful";
var happy_text = "Squeee!";
var happy = [
"(｀・ω・´)”", "ヽ(；▽；)ノ", "(*´・ｖ・)", "(((o(*ﾟ▽ﾟ*)o)))", "☆*:.｡. o(≧▽≦)o .｡.:*☆", "(⌒▽⌒)☆", "⊂((・▽・))⊃", "(≧∇≦)/", "(´∇ﾉ｀*)ノ", "（・◇・）", "( ´ ▽ ` )ﾉ", "（＾_＾）", "（￣ー￣）", "(*^▽^*)", "(＾▽＾)", "（’-’*)", "∩( ・ω・)∩", "(*≧▽≦)", "＼（＾ ＾）／", "Ｏ(≧∇≦)Ｏ", "(^～^)", "＼（＠￣∇￣＠）／", "(★^O^★)", "(☆^ー^☆)", "(´ω｀★)", "＼（Ｔ∇Ｔ）／", "ヽ(*≧ω≦)ﾉ", "*(*´∀｀*)☆", "Ｏ(≧▽≦)Ｏ", "ヽ(*⌒∇⌒*)ﾉ", "d=(´▽｀)=b", "＼(*T▽T*)／", "ヽ(‘ ∇‘ )ノ", "（*＾ワ＾*）", "ヽ(＾Д＾)ﾉ", "(´∀`)", "(°◇°;)", "(゜▽゜;)", "(/^▽^)/", "(ﾉ´ｰ`)ﾉ", "ヽ(´ー`)ﾉ", "(　＾∇＾)", "＼( ｀.∀´)／", "(●⌒∇⌒●)", "o(≧∇≦o)", "ヽ(｀◇´)/", "ヽ(*・ω・)ﾉ", "（＾ω＾）", "｡◕‿◕｡", "⊙ω⊙", "⊙△⊙",  "(◕‿◕✿)", "(∩_∩)", "｡◕‿◕｡", "(/•ิ_•ิ)/", "（ΦωΦ）", "（*＾＾*)", "（＾⊆＾）", "(-^〇^-)", "(ノ*゜▽゜*)", "ヾ(´▽｀;)ゝ", "(゜▼゜＊）", "(￣个￣)", "＼(^▽^＠)ノ", "(“⌒∇⌒”)", "へ(゜∇、°)へ", "（-＾〇＾-）", "（＞ｙ＜）", "ヽ(^。^)丿", "(ヘ。ヘ)", "（＾ｖ＾）", "ヾ(@°▽°@)ノ", "ヾ（＠＾▽＾＠）ノ", "ヾ(＠^∇^＠)ノ", "o((*^▽^*))o", "ヾ(@゜∇゜@)ノ", "ヾ(＠゜▽゜＠）ノ", "（＠´＿｀＠）", "ヾ(＠† ▽ †＠）ノ", "(ノ＞▽＜。)ノ", "＼（＠；◇；＠）／", "＼(☆o◎)／", "(((＼（＠v＠）／)))", "(°◇°;)", "(o;TωT)o", "ヽ(;^o^ヽ)", "（⌒▽⌒ゞ", "“ヽ(´▽｀)ノ”", "(((o(*ﾟ▽ﾟ*)o)))", "ヾ(＠⌒ー⌒＠)ノ", "Ψ(´▽｀)Ψ", "（ｖ＾＿＾）ｖ", "(ી(΄◞ิ౪◟ิ‵)ʃ)♥", "(❁´◡`❁)*✲ﾟ*", "(ღ˘⌣˘ღ) ♫･*:.｡. .｡.:*･", " ლ(╹◡╹ლ)", "(✿◠‿◠)", "(◑‿◐)", "ლ(́◉◞౪◟◉‵ლ)", "✖‿✖", "(*~▽~)", "(─‿‿─)", "∩(︶▽︶)∩", "(∩▂∩)", " (¬‿¬)", " (n˘v˘•)¬", " ಥ‿ಥ", "ʘ‿ʘ"
]; //     o (◡‿◡✿)\n

var hiding_name = "Hiding";
var hiding_text = "In the shadows, eating your rice";
var hiding = ["|･ω･｀)", "ﾍ(･_|", "｜−・;）", "|ω・）", "|_・)"
];

var inLove_name = "Love";
var inLove_text = "You make my heart shiny";
var inLove = [
"(๑•́ ₃ •̀๑)", "(´∀｀)♡", "(‘∀’●)♡", "（*´▽｀*）", "(*°∀°)=3", "（´ω｀♡%）", "ヽ(愛´∀｀愛)ノ", "♡o｡.(✿ฺ｡ ✿ฺ)", "(｡･ω･｡)ﾉ♡", "（●´∀｀）ノ♡", "♡＾▽＾♡", "(｡-_-｡ )人( ｡-_-｡)", "(●♡∀♡)", "（＿´ω｀）", "(´ ▽｀).。ｏ♡", "(o⌒．⌒o)", "（人´∀`*）", "（〃・・〃）", "♥（ﾉ´∀`）", "(ღ˘⌣˘ღ)", "(｡’▽’｡)♡", "(●´□`)♡", "(｡♥‿♥｡)", "(✿ ♥‿♥)", "♥╣[-_-]╠♥"
];

var kissing_name = "Kissing";
var kissing_text = "Smoochhhh!";
var kissing = [ "(´ε｀ )♡", "～(^з^)-☆", "|°з°|", "（＿ε＿）", "(‘ε’)", "|(￣3￣)|", "（￣ε￣＠）", "（*＾3＾）", "(´ε｀*)", "(○´3｀)ﾉ", "(☆´3｀)", "(*￣з￣)", "(づ￣ ³￣)づ", "（○゜ε＾○）", "(TεT)", "(-ε- )", "（＠ーεー＠）", "（*＾3＾）/～☆", "ლ(|||⌒εー|||)ლ", "(╯3╰)", "(ΘεΘ;)"
];

var laughing_name = "Laughing";
var laughing_text = "Heh heee ha HAAA HAAA *cough* <br>*snort*";
var laughing = [ "（・∀・）", "（　´∀｀）", "（⌒▽⌒）", "（＾ｖ＾）", "(*≧▽≦)ﾉｼ))", "(●´艸`)", "(*´艸`*)", "(｡ >艸<)", "(*≧艸≦)", "(*・艸・)"
];

var mellow_name = "Mellow and meh";
var mellow_text = "comme ci <br>comme ça"; // verify, look up accents
var mellow = [
"ヽ（´ー｀）┌", "┗┐ヽ(′Д、`*)ﾉ┌┛", "ヽ( ´¬`)ノ", "┗┃・ ■ ・┃┛", "ヾ(´A｀)ノﾟ", "ヽ（・＿・；)ノ", "ヽ(　￣д￣;)ノ", "＼（〇_ｏ）／", "ヽ(。_°)ノ", "＼(;´□｀)/", "ヾ(*´ー`)ノ", "ヽ(‘ー`)ノ", "ヽ(ー_ー )ノ", "ヽ(´～｀；）", "┐(‘～`；)┌", "ヽ（*ω。）ノ", "(;´・`)>", "（＾～＾）", "╮(─▽─)╭", "٩(-̮̮̃•̃)۶"
]; //     ¯\\_(ツ)_/¯

var animal_name = "Other Animals";
var animal_text = "Let's all go to <br>the zoo";
var animal = ["(=ﾟωﾟ)ﾉ", "(○’ω’○)", "[´・ω・`]", "ヾ(｡･ω･｡)", "(´-ω-｀)", "(*･ω･)", "(*-ω-)", "┗(･ω･;)┛", "｛・ω-*}", "(* >ω<)", "ヾ(ｏ･ω･)ﾉ", "w(´･ω･`)w", "(´・ω・`)", "(・ω・；)", "Σ(・ω・`|||)", "ヾ(・ω・ｏ)", "(´o・┏ω┓・o｀)", "ヽ(･ω･｡)ﾉ", "(ﾉ･ω･)ﾉﾞ", "ヽ(･ω･ゞ)", "ヾ(･ω･`｡)", "(。-`ω´-)", "(=ﾟωﾟ)ノ", "(｡+･`ω･´)", "ヽ(｡ゝω・｡)ﾉ", "(´・ω・`)", "⊂^j^⊃", "（⊂((・⊥・))⊃）", "~(-仝-)~", "⊂((〃’⊥’〃))⊃", "○(・x・)", "◎▼◎", "（-Φ-）", "⊆（⌒◎⌒）⊇", "≫(‘♀’)≪", "（’∽’）",  "（≡・　x　・≡）", "(∵)", "Σ( ﾟωﾟ；≡⊃", "ヽ(´･ω･`)､", "(*´ω｀)o", "(´・ω・)ﾉ", "~(-仝-)~", "～>゜）～～～～", "＞°）m～～～∈", "～＞°）mニニニニ＝～", "(∩ё∩)", "～>`)～～～", "]＾：山", "༼´◓ɷ◔`༽"
];

var misc_name = "Miscellaneous"; // append 'japanese'?
var misc_text = "Stuff that doesn't <br>quite fit in... <br>Like me!";
var misc = [
"─=≡Σ((( つ•̀ω•́)つ", "(´Д` )", "・゜・(ノД`)", "ヽ(´Д｀ヽ", "（ゝ。∂）", "(-_＼)", "( 　ﾟ,_ゝﾟ)", "ヽ(･∀･)ﾉ", "ヽ(*´Д｀*)ﾉ", "v(｡-_-｡)v", "（＾凹＾）", "(　ﾟдﾟ)", "(/・・)ノ", "(ﾉ･ｪ･)ﾉ", "＼(ﾟｰﾟ＼)", "o(‧”’‧)", "(◕〝◕)", "(◐ o ◑ )", "（;´_ヘ;）", "（πーπ）", "w(@。@;)w", "＼(●o○;)ノ", "（＄０＄）", "（ｏ。ｏ；）", "ヘ（゜◇、゜）ノ", "☆⌒(*＾-°)v", "☆⌒（＊＾∇゜）v", "m{oYo}屮", "*~●＞＾）", "━━☆＞＾）", "（´・｀ ）", "(^ц^ )", "【:εω", "(๑ ऀืົཽ₍₍ළ₎₎ ऀืົཽ)✧", "‹(•¿•)›", "(⊙ヮ⊙)", "( °٢° )", "( 　ﾟ,_ゝﾟ)", "☆彡　　★彡　　☆彡　　★彡",
"☆.。.:*・°☆.。.:*・°☆.。.:*・°☆.。.:*・°☆",
"`*:;,．★ ～☆・:.,;*",
"、ヽ｀ヽ｀、ヽ｀｀、ヽ｀、ヽ｀ヽ｀、、ヽ｀ヽ｀、ヽ｀｀、ヽ｀、ヽ｀ヽ｀、、ヽ｀ヽ｀、ヽ｀｀、ヽ｀、ヽ｀ヽ｀、、ヽ｀ヽ｀、ヽﾏｯﾃｪ(ノ；Д；)ノ ｀、、ヽ｀☂ヽ｀、ヽ｀｀、ヽ｀、ヽ｀ヽ｀、、ヽ｀ヽ｀、ヽ｀｀、ヽ｀、ヽ｀ヽ｀、、ヽ｀ヽ｀、ヽ｀｀、ヽ｀、ヽ｀ヽ｀、、ヽ、ヽ｀ヽ｀、ヽ｀｀"
];   //      ( c//”-}{-*\\x)      (V)o\\o;;(V)

var monkey_name = "Monkeys";
var monkey_text = "What are these guys <br>up to?";
var monkey = [ "@(o･ｪ･)@", "└@(･ｪ･)@┐", "@(｡･o･)@", "@(o･ｪ･o)@", "@(*^ｪ^)@"
];

var mustache_name = "Mustache";
var mustache_text = "How would I look <br>with a manly <br>mustache?";
var mustache = [ "(´┏o┓｀)", "ﾐ(´┏ω┓｀)/", "(´┏･┓｀)", "(￣┏Д┓￣°*)", "(￣┏Д┓￣ )", "( ￣┏＿┓￣)", "(ノ≧┏Д┓≦)ノ", "(￣┏∞┓￣)"
];

var pain_name = "In Pain";
var pain_text = "Ouch!";
var pain = ["☆⌒(＞。≪)", "☆￣(＞。☆)", "~(>_<~)", "ヘ(>_<ヘ)", "(。_＋)＼", "(xLx)ヾ", "/(*ι*)ヾ", "(ノ>ノ)", "／(x~x)＼", "◎☆（♯××）┘", "ヘ（。□°）ヘ"
];

var pig_name = "Pigs";
var pig_text = "Oink Oink!";
var pig = [ "( ´(00)`)", "ヾ(；ﾟ(OO)ﾟ)ﾉ", "ヽ(*’(OO)’)ﾉ", "(￣(oo)￣)ﾉ", "(○｀（●●）´○)ﾉ", "(*’(OO)’*)", "( ´(00)`)", "(；ﾟ(OO)ﾟ)", "(*´(00)`)’", "ヽ(*’(OO)’)ﾉﾟ", "q(￣(oo)￣)p", "｡ﾟ(ﾟ´(00)`ﾟ)ﾟ｡", "(￣（∞）￣)", "(￣(▽▽)￣)", "(=｀(∞)´=)"
];

var sad_name = "Sad or Crying";
var sad_text = "I'll cry you a river, <br>or a single <br>tear";
var sad = [ "（ ; ; ）", "(T＿T)", "（ ＴДＴ）", "(ToT)", "(Ｔ▽Ｔ)", "(‘A`)", "（；_・）", "(T_T)", "((T.T； )", "（；へ：）", "(´＿｀。)", "(´∩｀。)", "｡：ﾟ(｡ﾉω＼｡)ﾟ･｡", "(┳Д┳)", "(´；д；`)", "((´д｀))", "(ノД`)・゜・。", "・(/Д`)・", "｡゜(｀Д´)゜｡", "（；￣д￣）", "( ≧Д≦)", "(*´；ェ；`*)", "｡･ﾟﾟ･(>д<)･ﾟﾟ･｡", "(。┰ω┰。)", "(゜´Д｀゜)", "（ｉДｉ）", "(´；ω；`)", "。ﾟ(ﾟﾉД｀ﾟ)ﾟ｡", "ヽ(´□｀。)ﾉ", "(ﾟ´Д｀ﾟ)ﾟ", "{{p´Д｀q}}", "ヽ(●ﾟ´Д｀ﾟ●)ﾉﾟ", "( p_q)", ".・゜゜・（／。＼）・゜゜・．", "(个_个)", "(。┰ω┰。)", "p(´⌒｀｡q)", "(/□＼*)・゜", "(ㄒoㄒ)", "⊙︿⊙", "o(╥﹏╥)o", "o(；△；)o", "(;*△*;)", "（´＿｀）", "╥﹏╥", "(´°̥̥̥̥̥̥̥̥ω°̥̥̥̥̥̥̥̥｀)", "(∩︵∩)", "(╯︵╰,)", "(︶︹︺)", "(╥_╥)", "(╯︵╰,)"
];

var scared_name = "Scared";
var scared_text = "Shivering, really scared. <br>Hold me.";
var scared = [ "(ノдヽ)", "ヽ(ﾟДﾟ)ﾉ", "(／。＼)", "（／_＼）", "（／．＼）"
];

var shocked_name = "Schocked or Surprised";
var shocked_text= "Mewow! Didn't see you there!";
var shocked = [ "( ꒪Д꒪)ノ", "(((( ;°Д°))))", "((((；゜Д゜)))", "（゜◇゜）", "（￣□￣；）", "∑(O_O；)", "＼(>o<)ノ", "━Σ(ﾟДﾟ|||)━", "Σ(゜ロ゜;)", "Σ(゜゜)", "(*ﾟﾛﾟ)", "(」゜ロ゜)」", "щ(゜ロ゜щ)", "(ﾉﾟ0ﾟ)ﾉ~", "⊙▂⊙", "⊙０⊙", "w(°ｏ°)w", "L(・o・)」", "(○o○)", "（・□・；）", "((((；゜Д゜)))"
];

var shy_name = "Shy, Embarrassed or Bashful";
var shy_text = "So many reasons to be shy around <br>you.."; // Eeep, you caught me in the shower!
var shy = [
"(^_^;)", "(^^ゞ", "(^^;)", "(#^.^#)", "(‘-’*)", "(*^^*)", "（＠´＿｀＠）", "(⌒_⌒;)", "(#｀ε´#ゞ", "（*/∇＼*）", "(〃￣ω￣〃ゞ", "(*´ｪ｀*)", "(*´∀`*)", "(*´_ゝ｀)", "(*´∀`*)", "(/ω＼)", "(*ﾉ▽ﾉ)", "(*ﾉωﾉ)", "（/｡＼)", "（。-＿-。）", "(#／。＼#)", "(╯_╰)", "(╯ಊ╰)"
];

var singing_name = "Singing";
var singing_text = "La la Laa LAAAA!";
var singing = [ "ヾ(´□｀* )ノ", "（＾Ｏ＾☆♪", "＼(^o^)／", "(´▽｀)ノ♪", "“ヽ(´▽｀)ノ”", "ヽ(´▽｀；)/♪", "ヽ(´・｀)ﾉ", "ヽ(○´∀`)ﾉ♪", "ヾ(´ρ｀)〃", "ヾ(´〇｀)ﾉ", "(´△｀)♪", "(ﾉ´▽｀)ﾉ♪"
];

var sleeping_name = "Sleeping, Tired or Waking Up";
var sleeping_text = "*Yawn* time for sleep, not kaomoji";
var sleeping = [ "Σ(￣。￣ノ)ノ", "(-ｪ-)｡o", "(;´ρ`)", "(*´ο`*)", "ε-(´・｀)", "＼(o￣∇￣o)/", "＼（´Ｏ｀）／", "［(－－)］zzz", "(´～`)", "ヾ(。￣□￣)ﾂ", "ヾ(￣0￣； )ノ", "ヾ(。￣□￣)ﾂ", "ヾ(￣□￣;)ﾉ", "(。-ω-)zzz", "(-_-) zzz", "(∪｡∪)｡｡｡zzz", "(´〜｀*) zzz", "∑(￣□￣)", "(o´Д`)", "（)´д`(）", "（;≧皿≦）", "（´□｀川）", "ᕙ(⇀‸↼‶)ᕗ", "(ι´Д｀)ﾉ", "(ᴗ˳ᴗ)", "＿ﾉ乙(､ﾝ､)_", "(_ _)ヾ(‘ロ‘)"
];

var smug_name = "Smug";
var smug_text = "I'm a baller kaomoji cat";
var smug = [ "ー(￣～￣)ξ", "(((￣へ￣井)", "(`へ´*)ノ", "(￣^￣)", "（￣へ￣）", "（￣～￣;）", "(￣ェ￣;)", "(-、-)", "( ；｀ヘ´)", "o(´^｀)o", "(￣ω￣;)", "（｀＾´）ノ", "<(￣︶￣)>"
];

var winking_name = "Winking";
var winking_text = "Hey Good Lookin'";
var winking = [ "（＾＿－）", "(－ｏ⌒)", "（＾＿−）", "(^_-)", "(^_−)☆", "(⌒.−)＝★", "（＾_-）", "（＾＿・）", "๏[-ิ_•ิ]๏", "（○゜ε＾○）", "（＾＿－）≡★", "☆～（ゝ。∂）", "＼（^０＾）／", "(･ｪ-)"
];

var worried_name = "Worried";
var worried_text = "Ohhh! <br>I'm freaking <br>out!"
var worried = [ "(ーー;)", "( ；´Д｀)", "（；￣ェ￣）", "ヽ(￣д￣;)ノ", "(￣◇￣;)", "ヽ(￣д￣;)ノ", "（−＿−；）", "(~_~;)", "((*゜Д゜)ゞ”", "(･_-｡ )", "⊙﹏⊙", "ミ●﹏☉ミ", "(-’๏_๏’-)", "(⊙…⊙ )", "( ´△｀)", "(;° ロ°)", "ヽ（゜ロ゜；）ノ", "（°o°；）", "｡:ﾟ*+;(●´･д･`●);+*ﾟ:｡"
];

var writing_name = "Writing";
var writing_text = "Paws are hard to <br>write with";
var writing = [ "φ(￣ー￣ )ノ", "φ(°ρ°*)メ", "＿φ(□□ヘ)", "＿φ(￣ー￣ )", "φ(._.)", "φ（．．）", "___ψ(‥ )", "ψ(。。)", "φ(◎◎ヘ)", "＿φ( °-°)/", "＿φ(°-°=)", "φ(◎◎へ）", "φ(^∇^ )", "＿〆(。。)", "φ(．．;)", "φ(・ω・｀ )", "〆(・∀・＠)"
];



// by @pketh, <br>? for @carabunny
// send your thanks and exotic boozes to pirijan@gmail.com ?


























